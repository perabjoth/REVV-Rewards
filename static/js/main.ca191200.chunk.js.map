{"version":3,"sources":["api/revvrewards.js","components/Transactions.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","columns","field","title","type","Transactions","getTransactions","e","a","preventDefault","validAddress","web3","utils","isAddress","state","walletAddress","setState","validationDone","addressStamp","Date","getDate","toString","localStorage","getItem","setData","JSON","parse","setDataLoaded","setIsLoading","revvrewards","get","then","response","txns","data","result","filterData","formatData","catch","console","error","isLoading","dataLoaded","value","this","filter","txn","tokenSymbol","from","map","id","hash","timeStamp","parseFloat","fromWei","toFixed","Box","sx","marginTop","display","height","flexDirection","alignItems","Avatar","m","bgcolor","Typography","component","variant","onSubmit","noValidate","mt","TextField","margin","color","required","fullWidth","label","name","autoFocus","onChange","setWalletAddress","target","Button","mb","CircularProgress","className","style","width","flexGrow","icons","options","pageSize","pageSizeOptions","parseInt","length","Component","theme","createTheme","palette","App","ThemeProvider","Container","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca191200.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://api.polygonscan.com/api?module=account&action=tokentx&contractaddress=0x70c006878a5a50ed185ac4c87d837633923de296&sort=desc&apikey=NW6MQ4UW5JIEVBH61JW4AK3WY2Q27ZZIM7\"\r\n});","import React, { Component, forwardRef } from 'react'\r\nimport web3 from 'web3';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport { Avatar, Button, TextField, Box, CircularProgress, Typography } from '@mui/material';\r\nimport revvrewards from '../api/revvrewards';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst columns = [\r\n    { field: 'timeStamp', title: 'Date', type: 'date' },\r\n    { field: 'value', title: 'Reward'},\r\n]\r\n\r\n\r\nexport default class Transactions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            walletAddress: \"\",\r\n            validAddress: true,\r\n            validationDone: false,\r\n            isLoading: false,\r\n            dataLoaded: false,\r\n            data: []\r\n        }\r\n    }\r\n\r\n\r\n    setIsLoading(value) {\r\n        this.setState({ isLoading: value })\r\n    }\r\n\r\n    setDataLoaded(value) {\r\n        this.setState({\r\n            dataLoaded: value\r\n        });\r\n    }\r\n\r\n    setData(data) {\r\n        this.setState({\r\n            data: data\r\n        });\r\n    }\r\n\r\n    setWalletAddress(walletAddress) {\r\n        this.setState({\r\n            walletAddress: walletAddress,\r\n            validationDone: false,\r\n            dataLoaded: false\r\n        });\r\n    }\r\n\r\n    getTransactions = async (e) => {\r\n        e.preventDefault();\r\n        let validAddress = web3.utils.isAddress(this.state.walletAddress)\r\n\r\n        this.setState({\r\n            validAddress: validAddress,\r\n            validationDone: true\r\n        });\r\n\r\n\r\n        if (validAddress) {\r\n            let addressStamp = this.state.walletAddress + new Date().getDate().toString()\r\n            if (localStorage.getItem(addressStamp)) {\r\n                this.setData(JSON.parse(localStorage.getItem(addressStamp)));\r\n                this.setDataLoaded(true);\r\n            } else {\r\n                this.setIsLoading(true);\r\n                await revvrewards\r\n                    .get(`&address=${this.state.walletAddress}`)\r\n                    .then((response) => {\r\n                        let txns = response.data.result\r\n                        txns = this.filterData(txns);\r\n                        txns = this.formatData(txns);\r\n                        this.setData(txns);\r\n                        this.setDataLoaded(true);\r\n                        this.setIsLoading(false);\r\n                    }).catch((e) => {\r\n                        console.error(e);\r\n                        this.setIsLoading(false);\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    filterData(txns) {\r\n        txns = txns.filter((txn) => {\r\n            return txn.tokenSymbol === \"REVV\" && txn.from === \"0x9c8a06f0197ee718cd820adeb48a88ea2a9b5c48\";\r\n        });\r\n        return txns;\r\n    }\r\n\r\n    formatData(txns) {\r\n        txns = txns.map((txn) => {\r\n            txn.id = txn.hash\r\n            txn.timeStamp = new Date(txn.timeStamp * 1000)\r\n            txn.value = parseFloat(web3.utils.fromWei(txn.value)).toFixed(2)\r\n            return txn;\r\n        })\r\n\r\n        return txns;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box\r\n                sx={{\r\n                    marginTop: 8,\r\n                    display: 'flex',\r\n                    height: '100vh',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <Avatar sx={{ m: 1, bgcolor: 'red' }}>\r\n                    <AccountBalanceWalletIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    REVV Rewards\r\n                </Typography>\r\n                <Box component=\"form\" onSubmit={(e) => { this.getTransactions(e) }} noValidate sx={{ mt: 3 }}>\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        color=\"success\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"wallet\"\r\n                        label=\"Wallet Address\"\r\n                        name=\"wallet\"\r\n                        autoFocus\r\n                        error={!this.state.validAddress}\r\n                        onChange={(e) => this.setWalletAddress(e.target.value)}\r\n                    />\r\n                    <br />\r\n                    {!this.state.isLoading && <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                    >\r\n                        Get Rewards List\r\n                    </Button>}\r\n                    {this.state.isLoading && <CircularProgress className=\"text-center\" />}\r\n                </Box>\r\n                {this.state.dataLoaded &&\r\n                    <Box sx={{\r\n                        marginTop: 8,\r\n                        display: 'contents',\r\n                        height: '100vh',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}>\r\n                        <br />\r\n                        <div style={{ display: 'flex', height: '100%', width: '100%' }}>\r\n                            <div style={{ flexGrow: 1 }}>\r\n                                <MaterialTable\r\n                                    title=\"REVV Rewards\"\r\n                                    data={this.state.data}\r\n                                    columns={columns}\r\n                                    icons={tableIcons}\r\n                                    isLoading={this.state.isLoading}\r\n                                    options={{\r\n                                        pageSize: 10,\r\n                                        pageSizeOptions: [5, 10, 20, { value: this.state.data ? parseInt(this.state.data.length) : 0, label: 'All' }],\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                    </Box>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n}","import './App.css';\nimport { ThemeProvider, createTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Container } from '@material-ui/core';\nimport Transactions from './components/Transactions';\nconst theme = createTheme({\n  palette: {\n    type: \"dark\",\n  }\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\">\n        <CssBaseline />\n        <Transactions />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}